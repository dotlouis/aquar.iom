/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.contest16;

public class NeutralCellVector {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected NeutralCellVector(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NeutralCellVector obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        jainl16JNI.delete_NeutralCellVector(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public NeutralCellVector() {
    this(jainl16JNI.new_NeutralCellVector__SWIG_0(), true);
  }

  public NeutralCellVector(long n) {
    this(jainl16JNI.new_NeutralCellVector__SWIG_1(n), true);
  }

  public long size() {
    return jainl16JNI.NeutralCellVector_size(swigCPtr, this);
  }

  public long capacity() {
    return jainl16JNI.NeutralCellVector_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    jainl16JNI.NeutralCellVector_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return jainl16JNI.NeutralCellVector_isEmpty(swigCPtr, this);
  }

  public void clear() {
    jainl16JNI.NeutralCellVector_clear(swigCPtr, this);
  }

  public void add(NeutralCell x) {
    jainl16JNI.NeutralCellVector_add(swigCPtr, this, NeutralCell.getCPtr(x), x);
  }

  public NeutralCell get(int i) {
    return new NeutralCell(jainl16JNI.NeutralCellVector_get(swigCPtr, this, i), false);
  }

  public void set(int i, NeutralCell val) {
    jainl16JNI.NeutralCellVector_set(swigCPtr, this, i, NeutralCell.getCPtr(val), val);
  }

}
