/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.contest16;

public class jainl16JNI {
  public final static native long new_GameEndsPlayerVector__SWIG_0();
  public final static native long new_GameEndsPlayerVector__SWIG_1(long jarg1);
  public final static native long GameEndsPlayerVector_size(long jarg1, GameEndsPlayerVector jarg1_);
  public final static native long GameEndsPlayerVector_capacity(long jarg1, GameEndsPlayerVector jarg1_);
  public final static native void GameEndsPlayerVector_reserve(long jarg1, GameEndsPlayerVector jarg1_, long jarg2);
  public final static native boolean GameEndsPlayerVector_isEmpty(long jarg1, GameEndsPlayerVector jarg1_);
  public final static native void GameEndsPlayerVector_clear(long jarg1, GameEndsPlayerVector jarg1_);
  public final static native void GameEndsPlayerVector_add(long jarg1, GameEndsPlayerVector jarg1_, long jarg2, GameEndsPlayer jarg2_);
  public final static native long GameEndsPlayerVector_get(long jarg1, GameEndsPlayerVector jarg1_, int jarg2);
  public final static native void GameEndsPlayerVector_set(long jarg1, GameEndsPlayerVector jarg1_, int jarg2, long jarg3, GameEndsPlayer jarg3_);
  public final static native void delete_GameEndsPlayerVector(long jarg1);
  public final static native long new_PositionVector__SWIG_0();
  public final static native long new_PositionVector__SWIG_1(long jarg1);
  public final static native long PositionVector_size(long jarg1, PositionVector jarg1_);
  public final static native long PositionVector_capacity(long jarg1, PositionVector jarg1_);
  public final static native void PositionVector_reserve(long jarg1, PositionVector jarg1_, long jarg2);
  public final static native boolean PositionVector_isEmpty(long jarg1, PositionVector jarg1_);
  public final static native void PositionVector_clear(long jarg1, PositionVector jarg1_);
  public final static native void PositionVector_add(long jarg1, PositionVector jarg1_, long jarg2, Position jarg2_);
  public final static native long PositionVector_get(long jarg1, PositionVector jarg1_, int jarg2);
  public final static native void PositionVector_set(long jarg1, PositionVector jarg1_, int jarg2, long jarg3, Position jarg3_);
  public final static native void delete_PositionVector(long jarg1);
  public final static native long new_VirusVector__SWIG_0();
  public final static native long new_VirusVector__SWIG_1(long jarg1);
  public final static native long VirusVector_size(long jarg1, VirusVector jarg1_);
  public final static native long VirusVector_capacity(long jarg1, VirusVector jarg1_);
  public final static native void VirusVector_reserve(long jarg1, VirusVector jarg1_, long jarg2);
  public final static native boolean VirusVector_isEmpty(long jarg1, VirusVector jarg1_);
  public final static native void VirusVector_clear(long jarg1, VirusVector jarg1_);
  public final static native void VirusVector_add(long jarg1, VirusVector jarg1_, long jarg2, Virus jarg2_);
  public final static native long VirusVector_get(long jarg1, VirusVector jarg1_, int jarg2);
  public final static native void VirusVector_set(long jarg1, VirusVector jarg1_, int jarg2, long jarg3, Virus jarg3_);
  public final static native void delete_VirusVector(long jarg1);
  public final static native long new_PlayerCellVector__SWIG_0();
  public final static native long new_PlayerCellVector__SWIG_1(long jarg1);
  public final static native long PlayerCellVector_size(long jarg1, PlayerCellVector jarg1_);
  public final static native long PlayerCellVector_capacity(long jarg1, PlayerCellVector jarg1_);
  public final static native void PlayerCellVector_reserve(long jarg1, PlayerCellVector jarg1_, long jarg2);
  public final static native boolean PlayerCellVector_isEmpty(long jarg1, PlayerCellVector jarg1_);
  public final static native void PlayerCellVector_clear(long jarg1, PlayerCellVector jarg1_);
  public final static native void PlayerCellVector_add(long jarg1, PlayerCellVector jarg1_, long jarg2, PlayerCell jarg2_);
  public final static native long PlayerCellVector_get(long jarg1, PlayerCellVector jarg1_, int jarg2);
  public final static native void PlayerCellVector_set(long jarg1, PlayerCellVector jarg1_, int jarg2, long jarg3, PlayerCell jarg3_);
  public final static native void delete_PlayerCellVector(long jarg1);
  public final static native long new_PlayerVector__SWIG_0();
  public final static native long new_PlayerVector__SWIG_1(long jarg1);
  public final static native long PlayerVector_size(long jarg1, PlayerVector jarg1_);
  public final static native long PlayerVector_capacity(long jarg1, PlayerVector jarg1_);
  public final static native void PlayerVector_reserve(long jarg1, PlayerVector jarg1_, long jarg2);
  public final static native boolean PlayerVector_isEmpty(long jarg1, PlayerVector jarg1_);
  public final static native void PlayerVector_clear(long jarg1, PlayerVector jarg1_);
  public final static native void PlayerVector_add(long jarg1, PlayerVector jarg1_, long jarg2, Player jarg2_);
  public final static native long PlayerVector_get(long jarg1, PlayerVector jarg1_, int jarg2);
  public final static native void PlayerVector_set(long jarg1, PlayerVector jarg1_, int jarg2, long jarg3, Player jarg3_);
  public final static native void delete_PlayerVector(long jarg1);
  public final static native long new_NeutralCellVector__SWIG_0();
  public final static native long new_NeutralCellVector__SWIG_1(long jarg1);
  public final static native long NeutralCellVector_size(long jarg1, NeutralCellVector jarg1_);
  public final static native long NeutralCellVector_capacity(long jarg1, NeutralCellVector jarg1_);
  public final static native void NeutralCellVector_reserve(long jarg1, NeutralCellVector jarg1_, long jarg2);
  public final static native boolean NeutralCellVector_isEmpty(long jarg1, NeutralCellVector jarg1_);
  public final static native void NeutralCellVector_clear(long jarg1, NeutralCellVector jarg1_);
  public final static native void NeutralCellVector_add(long jarg1, NeutralCellVector jarg1_, long jarg2, NeutralCell jarg2_);
  public final static native long NeutralCellVector_get(long jarg1, NeutralCellVector jarg1_, int jarg2);
  public final static native void NeutralCellVector_set(long jarg1, NeutralCellVector jarg1_, int jarg2, long jarg3, NeutralCell jarg3_);
  public final static native void delete_NeutralCellVector(long jarg1);
  public final static native void GameEndsPlayer_player_id_set(long jarg1, GameEndsPlayer jarg1_, int jarg2);
  public final static native int GameEndsPlayer_player_id_get(long jarg1, GameEndsPlayer jarg1_);
  public final static native void GameEndsPlayer_name_set(long jarg1, GameEndsPlayer jarg1_, String jarg2);
  public final static native String GameEndsPlayer_name_get(long jarg1, GameEndsPlayer jarg1_);
  public final static native void GameEndsPlayer_score_set(long jarg1, GameEndsPlayer jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger GameEndsPlayer_score_get(long jarg1, GameEndsPlayer jarg1_);
  public final static native long new_GameEndsPlayer();
  public final static native void delete_GameEndsPlayer(long jarg1);
  public final static native long new_AINetException(String jarg1);
  public final static native String AINetException_what(long jarg1, AINetException jarg1_);
  public final static native void delete_AINetException(long jarg1);
  public final static native long new_DisconnectedException__SWIG_0(String jarg1);
  public final static native long new_DisconnectedException__SWIG_1();
  public final static native String DisconnectedException_what(long jarg1, DisconnectedException jarg1_);
  public final static native void delete_DisconnectedException(long jarg1);
  public final static native long new_KickException__SWIG_0(String jarg1);
  public final static native long new_KickException__SWIG_1();
  public final static native String KickException_what(long jarg1, KickException jarg1_);
  public final static native void delete_KickException(long jarg1);
  public final static native long new_SocketErrorException__SWIG_0(String jarg1);
  public final static native long new_SocketErrorException__SWIG_1();
  public final static native String SocketErrorException_what(long jarg1, SocketErrorException jarg1_);
  public final static native void delete_SocketErrorException(long jarg1);
  public final static native void Position_x_set(long jarg1, Position jarg1_, float jarg2);
  public final static native float Position_x_get(long jarg1, Position jarg1_);
  public final static native void Position_y_set(long jarg1, Position jarg1_, float jarg2);
  public final static native float Position_y_get(long jarg1, Position jarg1_);
  public final static native long new_Position();
  public final static native void delete_Position(long jarg1);
  public final static native long new_Actions();
  public final static native void delete_Actions(long jarg1);
  public final static native void Actions_clear(long jarg1, Actions jarg1_);
  public final static native void Actions_add_move_action(long jarg1, Actions jarg1_, int jarg2, float jarg3, float jarg4);
  public final static native void Actions_add_divide_action(long jarg1, Actions jarg1_, int jarg2, float jarg3, float jarg4, float jarg5);
  public final static native void Actions_add_create_virus_action(long jarg1, Actions jarg1_, int jarg2, float jarg3, float jarg4);
  public final static native void Actions_add_surrender_action(long jarg1, Actions jarg1_);
  public final static native void GameParameters_map_width_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_map_width_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_map_height_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_map_height_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_min_nb_players_set(long jarg1, GameParameters jarg1_, int jarg2);
  public final static native int GameParameters_min_nb_players_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_max_nb_players_set(long jarg1, GameParameters jarg1_, int jarg2);
  public final static native int GameParameters_max_nb_players_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_mass_absorption_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_mass_absorption_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_minimum_mass_ratio_to_absorb_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_minimum_mass_ratio_to_absorb_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_minimum_pcell_mass_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_minimum_pcell_mass_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_maximum_pcell_mass_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_maximum_pcell_mass_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_radius_factor_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_radius_factor_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_max_cells_per_player_set(long jarg1, GameParameters jarg1_, int jarg2);
  public final static native int GameParameters_max_cells_per_player_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_mass_loss_per_frame_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_mass_loss_per_frame_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_base_cell_speed_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_base_cell_speed_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_speed_loss_factor_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_speed_loss_factor_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_virus_mass_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_virus_mass_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_virus_creation_mass_loss_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_virus_creation_mass_loss_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_virus_max_split_set(long jarg1, GameParameters jarg1_, int jarg2);
  public final static native int GameParameters_virus_max_split_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_nb_starting_cells_per_player_set(long jarg1, GameParameters jarg1_, int jarg2);
  public final static native int GameParameters_nb_starting_cells_per_player_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_player_cells_starting_mass_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_player_cells_starting_mass_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_initial_neutral_cells_mass_set(long jarg1, GameParameters jarg1_, float jarg2);
  public final static native float GameParameters_initial_neutral_cells_mass_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_initial_neutral_cells_repop_time_set(long jarg1, GameParameters jarg1_, int jarg2);
  public final static native int GameParameters_initial_neutral_cells_repop_time_get(long jarg1, GameParameters jarg1_);
  public final static native void GameParameters_nb_turns_set(long jarg1, GameParameters jarg1_, int jarg2);
  public final static native int GameParameters_nb_turns_get(long jarg1, GameParameters jarg1_);
  public final static native long new_GameParameters();
  public final static native void delete_GameParameters(long jarg1);
  public final static native void Welcome_parameters_set(long jarg1, Welcome jarg1_, long jarg2, GameParameters jarg2_);
  public final static native long Welcome_parameters_get(long jarg1, Welcome jarg1_);
  public final static native void Welcome_initial_ncells_positions_set(long jarg1, Welcome jarg1_, long jarg2, PositionVector jarg2_);
  public final static native long Welcome_initial_ncells_positions_get(long jarg1, Welcome jarg1_);
  public final static native long new_Welcome();
  public final static native void delete_Welcome(long jarg1);
  public final static native void Virus_id_set(long jarg1, Virus jarg1_, int jarg2);
  public final static native int Virus_id_get(long jarg1, Virus jarg1_);
  public final static native void Virus_position_set(long jarg1, Virus jarg1_, long jarg2, Position jarg2_);
  public final static native long Virus_position_get(long jarg1, Virus jarg1_);
  public final static native long new_Virus();
  public final static native void delete_Virus(long jarg1);
  public final static native void PlayerCell_pcell_id_set(long jarg1, PlayerCell jarg1_, int jarg2);
  public final static native int PlayerCell_pcell_id_get(long jarg1, PlayerCell jarg1_);
  public final static native void PlayerCell_player_id_set(long jarg1, PlayerCell jarg1_, int jarg2);
  public final static native int PlayerCell_player_id_get(long jarg1, PlayerCell jarg1_);
  public final static native void PlayerCell_position_set(long jarg1, PlayerCell jarg1_, long jarg2, Position jarg2_);
  public final static native long PlayerCell_position_get(long jarg1, PlayerCell jarg1_);
  public final static native void PlayerCell_mass_set(long jarg1, PlayerCell jarg1_, float jarg2);
  public final static native float PlayerCell_mass_get(long jarg1, PlayerCell jarg1_);
  public final static native void PlayerCell_remaining_isolated_turns_set(long jarg1, PlayerCell jarg1_, int jarg2);
  public final static native int PlayerCell_remaining_isolated_turns_get(long jarg1, PlayerCell jarg1_);
  public final static native long new_PlayerCell();
  public final static native void delete_PlayerCell(long jarg1);
  public final static native void Player_player_id_set(long jarg1, Player jarg1_, int jarg2);
  public final static native int Player_player_id_get(long jarg1, Player jarg1_);
  public final static native void Player_name_set(long jarg1, Player jarg1_, String jarg2);
  public final static native String Player_name_get(long jarg1, Player jarg1_);
  public final static native void Player_nb_cells_set(long jarg1, Player jarg1_, int jarg2);
  public final static native int Player_nb_cells_get(long jarg1, Player jarg1_);
  public final static native void Player_mass_set(long jarg1, Player jarg1_, float jarg2);
  public final static native float Player_mass_get(long jarg1, Player jarg1_);
  public final static native void Player_score_set(long jarg1, Player jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger Player_score_get(long jarg1, Player jarg1_);
  public final static native long new_Player();
  public final static native void delete_Player(long jarg1);
  public final static native void NeutralCell_id_set(long jarg1, NeutralCell jarg1_, int jarg2);
  public final static native int NeutralCell_id_get(long jarg1, NeutralCell jarg1_);
  public final static native void NeutralCell_position_set(long jarg1, NeutralCell jarg1_, long jarg2, Position jarg2_);
  public final static native long NeutralCell_position_get(long jarg1, NeutralCell jarg1_);
  public final static native void NeutralCell_mass_set(long jarg1, NeutralCell jarg1_, float jarg2);
  public final static native float NeutralCell_mass_get(long jarg1, NeutralCell jarg1_);
  public final static native void NeutralCell_is_initial_set(long jarg1, NeutralCell jarg1_, boolean jarg2);
  public final static native boolean NeutralCell_is_initial_get(long jarg1, NeutralCell jarg1_);
  public final static native void NeutralCell_remaining_turns_before_apparition_set(long jarg1, NeutralCell jarg1_, int jarg2);
  public final static native int NeutralCell_remaining_turns_before_apparition_get(long jarg1, NeutralCell jarg1_);
  public final static native void NeutralCell_is_alive_set(long jarg1, NeutralCell jarg1_, boolean jarg2);
  public final static native boolean NeutralCell_is_alive_get(long jarg1, NeutralCell jarg1_);
  public final static native long new_NeutralCell();
  public final static native void delete_NeutralCell(long jarg1);
  public final static native long new_Session();
  public final static native void delete_Session(long jarg1);
  public final static native void Session_connect(long jarg1, Session jarg1_, String jarg2, int jarg3) throws java.lang.RuntimeException;
  public final static native void Session_login_player(long jarg1, Session jarg1_, String jarg2) throws java.lang.RuntimeException;
  public final static native void Session_login_visu(long jarg1, Session jarg1_, String jarg2) throws java.lang.RuntimeException;
  public final static native long Session_wait_for_welcome(long jarg1, Session jarg1_) throws java.lang.RuntimeException;
  public final static native int Session_wait_for_game_starts(long jarg1, Session jarg1_) throws java.lang.RuntimeException;
  public final static native void Session_wait_for_next_turn(long jarg1, Session jarg1_) throws java.lang.RuntimeException;
  public final static native void Session_send_actions(long jarg1, Session jarg1_, long jarg2, Actions jarg2_) throws java.lang.RuntimeException;
  public final static native long Session_welcome(long jarg1, Session jarg1_);
  public final static native int Session_current_turn_number(long jarg1, Session jarg1_);
  public final static native int Session_player_id(long jarg1, Session jarg1_);
  public final static native long Session_neutral_cells(long jarg1, Session jarg1_);
  public final static native long Session_my_player_cells(long jarg1, Session jarg1_);
  public final static native long Session_ennemy_player_cells(long jarg1, Session jarg1_);
  public final static native long Session_viruses(long jarg1, Session jarg1_);
  public final static native boolean Session_is_connected(long jarg1, Session jarg1_);
  public final static native boolean Session_is_logged(long jarg1, Session jarg1_);
  public final static native boolean Session_is_player(long jarg1, Session jarg1_);
  public final static native long DisconnectedException_SWIGUpcast(long jarg1);
  public final static native long KickException_SWIGUpcast(long jarg1);
  public final static native long SocketErrorException_SWIGUpcast(long jarg1);
}
